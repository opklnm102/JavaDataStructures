package ch7.byteLists;

//2개의 참조를 가지는 이중연결리스트
public class SpecializedList implements SpecializedListInterface {

	protected class SListNode{
		protected byte info;
		protected SListNode next;
		protected SListNode back;
	}
	protected SListNode listFirst;
	protected SListNode listLast;
	protected int numElements;
	protected SListNode currentFPos;  //current forward position for iteration
	protected SListNode currentBPos;  //current backward position for iteration	
	
	public SpecializedList() {
		numElements=0;
		listFirst=null;
		listLast=null;
		currentFPos=null;
		currentBPos=null;
	}
	
	@Override
	public void resetForward() {
		currentFPos = listFirst;		
	}

	@Override
	public byte getNextElement() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void resetBackward() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public byte getPriorElement() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public int size() {
		return numElements;
	}

	@Override
	public void addFront(byte element) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void addEnd(byte element) {
		// TODO Auto-generated method stub
		
	}

}
