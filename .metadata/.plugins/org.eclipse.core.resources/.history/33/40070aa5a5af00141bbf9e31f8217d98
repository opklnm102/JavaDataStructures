package ch7.largeInts;

import ch7.byteLists.SpecializedList;

public class LargeInt {
	private SpecializedList numbers;  //Holds digits
	
	private static final boolean PLUS = true;
	private static final boolean MINUS = false;
	
	private boolean sign;
	
	public LargeInt(){
		numbers = new SpecializedList();
		sign = PLUS;
	}
	
	public LargeInt(String intString){
		numbers = new SpecializedList();
		sign = PLUS;
		
		int firstDigitPosition;
		int lastDigitPosition;
		
		char digitChar;
		int digitInt;
		byte digitByte;
		
		firstDigitPosition=0;
		if(intString.charAt(0) == '+')
			firstDigitPosition=1;
		else
			if(intString.charAt(0) == '-'){
				firstDigitPosition = 1;
				sign = MINUS;
			}
		
		lastDigitPosition = intString.length()-1;
		
		for(int count = firstDigitPosition; count<=lastDigitPosition; count++){
			digitChar = intString.charAt(count);
			digitInt = Character.digit(digitChar,10);
			digitByte = (byte)digitInt;
			addDigit(digitByte);
		}
	}
	
	public void setNegative(){
		sign = MINUS;
	}
	
	public void addDigit(byte digit){
		numbers.addEnd(digit);
	}
	
	public String toString(){
		String largeIntString;
		if(sign == PLUS)
			largeIntString = "+";
		else
			largeIntString = "-";
		
		int length;
		length = numbers.size();
		numbers.resetForward();
		for(int count = length; count>=1; count++){
			largeIntString = largeIntString + numbers.getNextElement();
			if((((count-1)%3)==0) && (count != 1))
				largeIntString = largeIntString + ",";
		}
		return largeIntString;
	}
}
